<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>se.ifmo.SOA</groupId>
  <artifactId>MainService</artifactId>
  <version>1.0-SNAPSHOT</version>
  <name>MainService</name>
  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.target>19</maven.compiler.target>
    <maven.compiler.source>19</maven.compiler.source>
    <junit.version>5.13.2</junit.version>
    <payara.version>6.2025.9</payara.version>
      <jakarta.version>2.0.0</jakarta.version> <!-- Убедитесь, что версия актуальна -->
      <javax.servlet.version>5.0.0</javax.servlet.version>
      <hibernate.version>6.2.7.Final</hibernate.version>
      <byte.buddy.version>1.14.8</byte.buddy.version>
  </properties>

  <dependencies>
      <dependency>
          <groupId>jakarta.enterprise</groupId>
          <artifactId>jakarta.enterprise.cdi-api</artifactId>
          <version>3.0.0</version>
          <scope>provided</scope>
      </dependency>

      <!-- Jakarta Servlet API -->
      <dependency>
          <groupId>jakarta.servlet</groupId>
          <artifactId>jakarta.servlet-api</artifactId>
          <version>${javax.servlet.version}</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>jakarta.inject</groupId>
          <artifactId>jakarta.inject-api</artifactId>
          <version>2.0.1</version>
      </dependency>
      <!-- Добавьте другие зависимости, которые вам нужны -->
      <!-- Например, для работы с JAX-RS -->
      <dependency>
          <groupId>jakarta.ws.rs</groupId>
          <artifactId>jakarta.ws.rs-api</artifactId>
          <version>3.1.0</version>
          <scope>provided</scope>
      </dependency>

      <!-- Если вы используете реализацию CDI, например, Weld -->
      <dependency>
          <groupId>org.jboss.weld.se</groupId>
          <artifactId>weld-se-core</artifactId>
          <version>3.1.6.Final</version> <!-- Убедитесь, что версия актуальна -->
      </dependency>
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>7.0.4.Final</version>
          <exclusions>
              <exclusion>
                  <groupId>org.javassist</groupId>
                  <artifactId>javassist</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>net.bytebuddy</groupId>
                  <artifactId>byte-buddy</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>net.bytebuddy</groupId>
          <artifactId>byte-buddy</artifactId>
          <version>1.17.7</version>
      </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>4.0.5</version>
    </dependency><dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>9.0.1.Final</version>
    </dependency>
<dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>fish.payara.extras</groupId>
          <artifactId>payara-micro</artifactId>
          <version>6.2025.9</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <version>1.18.38</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>42.7.7</version>
      </dependency>
      <dependency>
          <groupId>org.eclipse.persistence</groupId>
          <artifactId>eclipselink</artifactId>
          <version>4.0.2</version>
      </dependency>
      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>2.15.2</version>
      </dependency>
      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>2.15.2</version>
      </dependency>
      <dependency>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-xml</artifactId>
          <version>2.15.2</version>
      </dependency>
      <dependency>
          <groupId>org.eclipse</groupId>
          <artifactId>yasson</artifactId>
          <version>3.0.3</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>org.glassfish.jersey.containers</groupId>
          <artifactId>jersey-container-servlet</artifactId>
          <version>3.1.6</version>
          <scope>provided</scope>
      </dependency>

      <!-- Для Swagger/OpenAPI -->
      <dependency>
          <groupId>fish.payara.api</groupId>
          <artifactId>payara-api</artifactId>
          <version>6.2025.9</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>jakarta.ejb</groupId>
          <artifactId>jakarta.ejb-api</artifactId>
          <version>4.0.1</version>
      </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.4.0</version>
      </plugin>
      <plugin>
            <groupId>fish.payara.maven.plugins</groupId>
            <artifactId>payara-micro-maven-plugin</artifactId>
            <version>2.1</version>
            <configuration>
                <payaraVersion>${payara.version}</payaraVersion>
                <deployWar>true</deployWar>
            </configuration>
      </plugin>
    </plugins>
  </build>
</project>